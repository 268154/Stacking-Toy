def display_stack(stack):
    # Create ASCII art representation of the stacking toy
    if not stack:
        print("No rings are left on the toy.")
        return
    
    print("    _____")
    for color in reversed(stack):  # Show the stack from top to bottom
        print(f"   |     |")
        print(f"   |{color.capitalize()} |")
        print(f"   |_____|")
    
    print("      |")
    print("      |")
    print("      |")
    print("   -----")

def main():
    stack = []  # Creating empty stack
    colors = ['red', 'orange', 'yellow', 'green', 'blue']  # Available colors
    #asking user if they want to add or remove a ring
    while True:
        action = input("Do you want to ADD or REMOVE a color? (type 'EXIT' to quit): ").strip().lower()
        #asking user what color they want to add or remove
        if action == 'add':
            color = input(f"Enter a color to add ({', '.join(colors)}): ").strip().lower()
            #checking if they color the user inputed is in the color list for the toy if so they will do the desired action if not it will show an error
            if color in colors:
                stack.append(color)
                print(f"{color} added.")
                display_stack(stack)  # Show the updated stack
            else:
                print("Invalid color. Please choose from red, orange, yellow, green, or blue.")
        
        elif action == 'remove':
            if stack:
                removed_color = stack.pop()
                print(f"Removed {removed_color}.")
                display_stack(stack)  # Show the updated stack
            else:
                print("The stack is empty. Nothing to remove.")
        #^^^^^^^^^^^^^ what it outputs if the stack is empty 
        elif action == 'exit':
            print("Exiting program.")
            break
        
        else:
            print("Invalid input. Please type 'ADD', 'REMOVE', or 'EXIT'.")

main()
#end of program if user types in exit
